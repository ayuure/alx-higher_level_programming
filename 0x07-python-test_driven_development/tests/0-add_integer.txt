The ``0-add_integer`` module
======================

Using ``add_integer`` function
-------------------

Import the module 
    >>> add_integer = __import__("0-add_integer").add_integer

Checking that error is rasie when a is not a float
    >>> add_integer('a', 9) #doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Checking that error is raise when b is not a float
    >>> add_integer(1,'b') +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Checking that error is rasied when a is not an int
    >>> add_integer('school', 9) #doctest: +REPORT_NDIFF
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Checking that error is raise when b is not a int
    >>> add_integer(1,'school') +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Check that the right value is retruned:
    >>> add_integer(1, 2)
    3

Check that not providing a value for b doesn't result in an error
    >>> add_integer(1)
    99

check that negative numbers give the rigth return value
    >>> add_integer(-1, 2)
    1

check that when no value is inputed an error is raise
    >> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
