The ``0-add_integer`` module
======================

Using ``add_integer`` function
-------------------

# Import the BaseGeometry class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Create an instance of BaseGeometry
>>> base_geo = BaseGeometry()

# Test area() method
>>> try:
...     base_geo.area()
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented

# Test integer_validator() method with valid input
>>> base_geo.integer_validator("test", 5)

# Test integer_validator() method with invalid input (non-integer)
>>> try:
...     base_geo.integer_validator("test", "string")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] test must be an integer

# Test integer_validator() method with invalid input (non-positive integer)
>>> try:
...     base_geo.integer_validator("test", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] test must be greater than 0